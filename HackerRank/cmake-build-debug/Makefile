# CMAKE generated file: DO NOT EDIT!
# Generated by "MinGW Makefiles" Generator, CMake Version 3.17

# Default target executed when no arguments are given to make.
default_target: all

.PHONY : default_target

# Allow only one "make -f Makefile2" at a time, but pass parallelism.
.NOTPARALLEL:


#=============================================================================
# Special targets provided by cmake.

# Disable implicit rules so canonical targets will work.
.SUFFIXES:


# Disable VCS-based implicit rules.
% : %,v


# Disable VCS-based implicit rules.
% : RCS/%


# Disable VCS-based implicit rules.
% : RCS/%,v


# Disable VCS-based implicit rules.
% : SCCS/s.%


# Disable VCS-based implicit rules.
% : s.%


.SUFFIXES: .hpux_make_needs_suffix_list


# Command-line flag to silence nested $(MAKE).
$(VERBOSE)MAKESILENT = -s

# Suppress display of executed commands.
$(VERBOSE).SILENT:


# A target that is always out of date.
cmake_force:

.PHONY : cmake_force

#=============================================================================
# Set environment variables for the build.

SHELL = cmd.exe

# The CMake executable.
CMAKE_COMMAND = "C:\Program Files\JetBrains\CLion 2020.3.2\bin\cmake\win\bin\cmake.exe"

# The command to remove a file.
RM = "C:\Program Files\JetBrains\CLion 2020.3.2\bin\cmake\win\bin\cmake.exe" -E rm -f

# Escaping for special characters.
EQUALS = =

# The top-level source directory on which CMake was run.
CMAKE_SOURCE_DIR = E:\Github\CPP\HackerRank

# The top-level build directory on which CMake was run.
CMAKE_BINARY_DIR = E:\Github\CPP\HackerRank\cmake-build-debug

#=============================================================================
# Targets provided globally by CMake.

# Special rule for the target rebuild_cache
rebuild_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "Running CMake to regenerate build system..."
	"C:\Program Files\JetBrains\CLion 2020.3.2\bin\cmake\win\bin\cmake.exe" --regenerate-during-build -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR)
.PHONY : rebuild_cache

# Special rule for the target rebuild_cache
rebuild_cache/fast: rebuild_cache

.PHONY : rebuild_cache/fast

# Special rule for the target edit_cache
edit_cache:
	@$(CMAKE_COMMAND) -E cmake_echo_color --switch=$(COLOR) --cyan "No interactive CMake dialog available..."
	"C:\Program Files\JetBrains\CLion 2020.3.2\bin\cmake\win\bin\cmake.exe" -E echo "No interactive CMake dialog available."
.PHONY : edit_cache

# Special rule for the target edit_cache
edit_cache/fast: edit_cache

.PHONY : edit_cache/fast

# The main all target
all: cmake_check_build_system
	$(CMAKE_COMMAND) -E cmake_progress_start E:\Github\CPP\HackerRank\cmake-build-debug\CMakeFiles E:\Github\CPP\HackerRank\cmake-build-debug\CMakeFiles\progress.marks
	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 all
	$(CMAKE_COMMAND) -E cmake_progress_start E:\Github\CPP\HackerRank\cmake-build-debug\CMakeFiles 0
.PHONY : all

# The main clean target
clean:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 clean
.PHONY : clean

# The main clean target
clean/fast: clean

.PHONY : clean/fast

# Prepare targets for installation.
preinstall: all
	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 preinstall
.PHONY : preinstall

# Prepare targets for installation.
preinstall/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 preinstall
.PHONY : preinstall/fast

# clear depends
depend:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 1
.PHONY : depend

#=============================================================================
# Target rules for targets named HackerRank

# Build rule for target.
HackerRank: cmake_check_build_system
	$(MAKE) $(MAKESILENT) -f CMakeFiles\Makefile2 HackerRank
.PHONY : HackerRank

# fast build rule for target.
HackerRank/fast:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/build
.PHONY : HackerRank/fast

Problem1.obj: Problem1.cpp.obj

.PHONY : Problem1.obj

# target to build an object file
Problem1.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/Problem1.cpp.obj
.PHONY : Problem1.cpp.obj

Problem1.i: Problem1.cpp.i

.PHONY : Problem1.i

# target to preprocess a source file
Problem1.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/Problem1.cpp.i
.PHONY : Problem1.cpp.i

Problem1.s: Problem1.cpp.s

.PHONY : Problem1.s

# target to generate assembly for a file
Problem1.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/Problem1.cpp.s
.PHONY : Problem1.cpp.s

between-two-set.obj: between-two-set.cpp.obj

.PHONY : between-two-set.obj

# target to build an object file
between-two-set.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/between-two-set.cpp.obj
.PHONY : between-two-set.cpp.obj

between-two-set.i: between-two-set.cpp.i

.PHONY : between-two-set.i

# target to preprocess a source file
between-two-set.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/between-two-set.cpp.i
.PHONY : between-two-set.cpp.i

between-two-set.s: between-two-set.cpp.s

.PHONY : between-two-set.s

# target to generate assembly for a file
between-two-set.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/between-two-set.cpp.s
.PHONY : between-two-set.cpp.s

bill-division.obj: bill-division.cpp.obj

.PHONY : bill-division.obj

# target to build an object file
bill-division.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/bill-division.cpp.obj
.PHONY : bill-division.cpp.obj

bill-division.i: bill-division.cpp.i

.PHONY : bill-division.i

# target to preprocess a source file
bill-division.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/bill-division.cpp.i
.PHONY : bill-division.cpp.i

bill-division.s: bill-division.cpp.s

.PHONY : bill-division.s

# target to generate assembly for a file
bill-division.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/bill-division.cpp.s
.PHONY : bill-division.cpp.s

breaking-best-and-worst-records.obj: breaking-best-and-worst-records.cpp.obj

.PHONY : breaking-best-and-worst-records.obj

# target to build an object file
breaking-best-and-worst-records.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/breaking-best-and-worst-records.cpp.obj
.PHONY : breaking-best-and-worst-records.cpp.obj

breaking-best-and-worst-records.i: breaking-best-and-worst-records.cpp.i

.PHONY : breaking-best-and-worst-records.i

# target to preprocess a source file
breaking-best-and-worst-records.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/breaking-best-and-worst-records.cpp.i
.PHONY : breaking-best-and-worst-records.cpp.i

breaking-best-and-worst-records.s: breaking-best-and-worst-records.cpp.s

.PHONY : breaking-best-and-worst-records.s

# target to generate assembly for a file
breaking-best-and-worst-records.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/breaking-best-and-worst-records.cpp.s
.PHONY : breaking-best-and-worst-records.cpp.s

diivisible-sum-pairs.obj: diivisible-sum-pairs.cpp.obj

.PHONY : diivisible-sum-pairs.obj

# target to build an object file
diivisible-sum-pairs.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/diivisible-sum-pairs.cpp.obj
.PHONY : diivisible-sum-pairs.cpp.obj

diivisible-sum-pairs.i: diivisible-sum-pairs.cpp.i

.PHONY : diivisible-sum-pairs.i

# target to preprocess a source file
diivisible-sum-pairs.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/diivisible-sum-pairs.cpp.i
.PHONY : diivisible-sum-pairs.cpp.i

diivisible-sum-pairs.s: diivisible-sum-pairs.cpp.s

.PHONY : diivisible-sum-pairs.s

# target to generate assembly for a file
diivisible-sum-pairs.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/diivisible-sum-pairs.cpp.s
.PHONY : diivisible-sum-pairs.cpp.s

main.obj: main.cpp.obj

.PHONY : main.obj

# target to build an object file
main.cpp.obj:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/main.cpp.obj
.PHONY : main.cpp.obj

main.i: main.cpp.i

.PHONY : main.i

# target to preprocess a source file
main.cpp.i:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/main.cpp.i
.PHONY : main.cpp.i

main.s: main.cpp.s

.PHONY : main.s

# target to generate assembly for a file
main.cpp.s:
	$(MAKE) $(MAKESILENT) -f CMakeFiles\HackerRank.dir\build.make CMakeFiles/HackerRank.dir/main.cpp.s
.PHONY : main.cpp.s

# Help Target
help:
	@echo The following are some of the valid targets for this Makefile:
	@echo ... all (the default if no target is provided)
	@echo ... clean
	@echo ... depend
	@echo ... edit_cache
	@echo ... rebuild_cache
	@echo ... HackerRank
	@echo ... Problem1.obj
	@echo ... Problem1.i
	@echo ... Problem1.s
	@echo ... between-two-set.obj
	@echo ... between-two-set.i
	@echo ... between-two-set.s
	@echo ... bill-division.obj
	@echo ... bill-division.i
	@echo ... bill-division.s
	@echo ... breaking-best-and-worst-records.obj
	@echo ... breaking-best-and-worst-records.i
	@echo ... breaking-best-and-worst-records.s
	@echo ... diivisible-sum-pairs.obj
	@echo ... diivisible-sum-pairs.i
	@echo ... diivisible-sum-pairs.s
	@echo ... main.obj
	@echo ... main.i
	@echo ... main.s
.PHONY : help



#=============================================================================
# Special targets to cleanup operation of make.

# Special rule to run CMake to check the build system integrity.
# No rule that depends on this can have commands that come from listfiles
# because they might be regenerated.
cmake_check_build_system:
	$(CMAKE_COMMAND) -S$(CMAKE_SOURCE_DIR) -B$(CMAKE_BINARY_DIR) --check-build-system CMakeFiles\Makefile.cmake 0
.PHONY : cmake_check_build_system

